diff --git a/Godeps/_workspace/src/google.golang.org/cloud/compute/metadata/metadata.go b/Godeps/_workspace/src/google.golang.org/cloud/compute/metadata/metadata.go
index d8eca17..453b387 100644
--- a/Godeps/_workspace/src/google.golang.org/cloud/compute/metadata/metadata.go
+++ b/Godeps/_workspace/src/google.golang.org/cloud/compute/metadata/metadata.go
@@ -174,41 +174,41 @@ func OnGCE() bool {
 		return onGCE.v
 	}
 	onGCE.set = true
-	onGCE.v = testOnGCE()
+//	onGCE.v = testOnGCE()
 	return onGCE.v
 }
 
-func testOnGCE() bool {
-	cancel := make(chan struct{})
-	defer close(cancel)
-
-	resc := make(chan bool, 2)
-
-	// Try two strategies in parallel.
-	// See https://github.com/GoogleCloudPlatform/gcloud-golang/issues/194
-	go func() {
-		req, _ := http.NewRequest("GET", "http://"+metadataIP, nil)
-		req.Cancel = cancel
-		res, err := metaClient.Do(req)
-		if err != nil {
-			resc <- false
-			return
-		}
-		defer res.Body.Close()
-		resc <- res.Header.Get("Metadata-Flavor") == "Google"
-	}()
-
-	go func() {
-		addrs, err := net.LookupHost("metadata.google.internal")
-		if err != nil || len(addrs) == 0 {
-			resc <- false
-			return
-		}
-		resc <- strsContains(addrs, metadataIP)
-	}()
-
-	return <-resc
-}
+//func testOnGCE() bool {
+//	cancel := make(chan struct{})
+//	defer close(cancel)
+//
+//	resc := make(chan bool, 2)
+//
+//	// Try two strategies in parallel.
+//	// See https://github.com/GoogleCloudPlatform/gcloud-golang/issues/194
+//	go func() {
+//		req, _ := http.NewRequest("GET", "http://"+metadataIP, nil)
+//		req.Cancel = cancel
+//		res, err := metaClient.Do(req)
+//		if err != nil {
+//			resc <- false
+//			return
+//		}
+//		defer res.Body.Close()
+//		resc <- res.Header.Get("Metadata-Flavor") == "Google"
+//	}()
+//
+//	go func() {
+//		addrs, err := net.LookupHost("metadata.google.internal")
+//		if err != nil || len(addrs) == 0 {
+//			resc <- false
+//			return
+//		}
+//		resc <- strsContains(addrs, metadataIP)
+//	}()
+//
+//	return <-resc
+//}
 
 // Subscribe subscribes to a value from the metadata service.
 // The suffix is appended to "http://${GCE_METADATA_HOST}/computeMetadata/v1/".
